---
import CollapsibleHeader from "@/components/CollapsibleHeader.astro";
import Logo from "@/components/Logo";
import ScoreHeader from "../components/ScoreHeader/ScoreHeader.astro";
import Hamburger from "@/components/Hamburger.astro";

import styles from "./site-header.module.scss";
import Navbar from "./Navbar.astro";

let type = "musician";

const currentPath = Astro.url.pathname;

function getLogoAnimation() {
    let animation;
    if (currentPath === "/design") {
        animation = "SWITCH_TO_DEVELOPER";
    }
    if (currentPath === "/") {
        animation = "SWITCH_TO_MUSICIAN";
    }

    return animation;
}

const appLinks = [
    {
        content: "Apps",
        address: "/apps",
    },
];

const resourceLinks = [
    {
        content: "Composition",
        address: "/composition",
    },
    {
        content: "Guitar",
        address: "/guitar",
    },
    {
        content: "Notation",
        address: "/notation",
    },
    {
        content: "Recording",
        address: "/recording",
    },
    {
        content: "Singing",
        address: "/singing",
    },
];

const siteLinks = [
    {
        content: "About",
        address: "/about",
    },
    {
        content: "Contact",
        address: "/contact",
    },
    {
        content: "Lessons",
        address: "/lessons",
    },
    {
        content: "Performances",
        address: "/performances",
    },
];
---

<CollapsibleHeader>
    <div class={styles.header__content}>
        <a href="/" class={styles["logo-link"]}>
            <Logo
                client:only="react"
                width="1rem"
                mode={type}
                animation={getLogoAnimation()}
            />
            <span class={styles.title}>Elliot Reed Music</span>
        </a>

        <button
            class="menu-toggle"
            aria-controls="nav-container__mobile"
            aria-expanded="false"
        >
            <Hamburger />
        </button>

        <div class="nav-container__mobile">
            <div class="navbar-container">
                <Navbar links={siteLinks} />
                <div class="seperator"></div>
                <Navbar links={resourceLinks} />
            </div>
        </div>

        <div class="navbars">
            <Navbar links={siteLinks} />
        </div>
        <div class="navbars">
            <Navbar links={appLinks} />
            <Navbar links={resourceLinks} />
        </div>
        <ScoreHeader />
    </div>
</CollapsibleHeader>

<style lang="scss">
    @use "@/styles/abstracts" as *;

    .menu-toggle {
        z-index: 1100;
        padding: 0;
        // margin-block: $space-sm;
        // margin-inline: $space-md;
        background: transparent;
        // background: get-color("lightShades");
        color: inherit;
        border: $border;
        border: none;
        border-radius: $border-radius;
        font-size: $fs-md-rem;
        font-weight: $fw-lg;
        @include padding-box("md");
        cursor: pointer;

        @include respond-to("sm") {
            display: none;
        }

        &:hover,
        &:active,
        &:focus {
            outline: none;
            // color: get-color("lightShades");
            // background: get-color("darkShades");
        }

        svg {
            pointer-events: none;
            font-size: $fs-xxl-rem;
        }
    }

    .menu-toggle[aria-expanded="true"] + .nav-container__mobile {
        transform: translate(0, 0);
    }

    .nav-container__mobile {
        position: fixed;
        inset: 0;
        background-color: get-color("dark", 600);
        transform: translate(100vw, 0);
        transition: transform $duration-md ease-in-out;
        z-index: 200;
        // overflow: hidden;

        @include respond-to("sm") {
            position: relative;
            display: none;
            transform: unset;
        }

        .navbar-container {
            position: relative;
            display: flex;
            flex-direction: column;
            justify-content: center;
            text-align: right;
            max-width: 66%;
            margin-inline-start: auto;
            height: 100%;
            background-color: get-color("lightShades", 500);

            @include respond-to("sm") {
                // flex-direction: row;
                max-width: 100%;
            }
        }
    }

    .navbars {
        display: none;
        @include respond-to("sm") {
            display: flex;
        }
    }

    .navbars + .navbars {
        @include respond-to("sm") {
            justify-content: center;
            font-size: $fs-md-rem;
            flex: 1 0 100%;
            gap: $space-md;
        }
    }

    .seperator {
        display: block;
        margin-block: $space-md;
        margin-inline: $space-md;
        border-bottom: 3px solid get-color("dark", 200);
    }
</style>

<script>
    function setupNavMenu() {
        const navContainerMobile = document.querySelector(
            ".nav-container__mobile",
        );
        const body = document.querySelector("body");
        const navbarContainer = document.querySelector(".navbar-container");
        const menuToggle = document.querySelector(".menu-toggle");
        const hamburger = document.querySelector(".hamburger");

        function toggleMenu() {
            if (!menuToggle || !hamburger || !body) return;
            console.log("here");

            if (menuToggle.getAttribute("aria-expanded") === "false") {
                menuToggle.setAttribute("aria-expanded", "true");
                if (!hamburger.classList.contains("isActive")) {
                    hamburger.classList.add("isActive");
                }
                if (!body.classList.contains("body-no-scroll")) {
                    body.classList.add("body-no-scroll");
                }
            } else {
                menuToggle.setAttribute("aria-expanded", "false");
                if (hamburger?.classList.contains("isActive")) {
                    hamburger?.classList.remove("isActive");
                }
                if (body.classList.contains("body-no-scroll")) {
                    body.classList.remove("body-no-scroll");
                }
            }
        }

        menuToggle?.addEventListener("click", () => {
            toggleMenu();
        });

        navContainerMobile?.addEventListener("click", (e) => {
            console.log("e.target: ", e.target);
            toggleMenu();
        });
    }

    // Run on initial load
    setupNavMenu();

    // Run after Astro view transitions
    document.addEventListener("astro:after-swap", setupNavMenu);
</script>
