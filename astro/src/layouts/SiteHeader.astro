---
import CollapsibleHeader from "@/components/CollapsibleHeader.astro";
import Logo from "@/components/Logo";
import ScoreHeader from "../components/ScoreHeader/ScoreHeader.astro";

import styles from "./site-header.module.scss";
import Navbar from "./Navbar.astro";
import Icon from "node_modules/astro-icon/components/Icon.astro";

let type = "musician";

const currentPath = Astro.url.pathname;

function getLogoAnimation() {
    let animation;
    if (currentPath === "/design") {
        animation = "SWITCH_TO_DEVELOPER";
    }
    if (currentPath === "/") {
        animation = "SWITCH_TO_MUSICIAN";
    }

    return animation;
}

const designLinks = [
    {
        content: "Color",
        address: "/design/color",
    },
    {
        content: "Typography",
        address: "/design/typography",
    },
];

const resourceLinks = [
    {
        content: "Composition",
        address: "/composition",
    },
    {
        content: "Guitar",
        address: "/guitar",
    },
    {
        content: "Notation",
        address: "/notation",
    },
    {
        content: "Recording",
        address: "/recording",
    },
    {
        content: "Singing",
        address: "/singing",
    },
];

const showNotesLinks = [
    {
        content: "Abbey Road",
        address: "/abbeyroad",
    },
];

const siteLinks = [
    {
        content: "About",
        address: "/about",
    },
    {
        content: "Contact",
        address: "/contact",
    },
    {
        content: "Lessons",
        address: "/lessons",
    },
    {
        content: "Performances",
        address: "/performances",
    },
    {
        content: "Design",
        address: "/design",
        subLinks: designLinks,
    },
    {
        content: "Show Notes",
        address: "/show-notes",
        subLinks: showNotesLinks,
    },
];
---

<>
    <CollapsibleHeader contentClass={styles.header}>
        <div class={styles["nav-brand"]}>
            <a href="/">
                <div class={styles["logo-wrapper"]}>
                    <!-- TODO: handle xs logo size -->
                    <Logo
                        client:only="react"
                        width="2.5em"
                        mode={type}
                        animation={getLogoAnimation()}
                    />
                    <span class={styles.title}>Elliot Reed Music</span>
                </div>
            </a>
        </div>
        <button
            class="menu-toggle open"
            aria-controls="nav-container"
            aria-expanded="false"><Icon name="tabler:menu-2" /></button
        >
        <div class="nav-container">
            <button
                class="menu-toggle close"
                aria-controls="nav-container"
                aria-expanded="false"><Icon name="tabler:x" /></button
            >
            <div class="navbar-container">
                <Navbar links={siteLinks} />
                <div class="seperator"></div>
                <Navbar links={resourceLinks} />
            </div>
        </div>
        <div class="navbars">
            <Navbar links={siteLinks} />
        </div>
        <div class="navbars">
            <Navbar links={resourceLinks} />
        </div>
        <ScoreHeader />
    </CollapsibleHeader>
</>

<style lang="scss">
    @use "@/styles/abstracts" as *;

    .menu-toggle {
        display: grid;
        place-content: center;
        margin-block: $space-sm;
        margin-inline: $space-md;
        background: transparent;
        color: inherit;
        border: $border;
        border-radius: $border-radius;
        font-size: $fs-md-rem;
        font-weight: $fw-lg;
        @include padding-box("xxs");
        cursor: pointer;

        @include respond-to("sm") {
            display: none;
        }

        &:hover,
        &:active {
            color: get-color("lightShades");
            background: get-color("darkShades");
        }

        &.close {
            position: absolute;
            top: 0;
            right: 0;
        }

        svg {
            font-size: $fs-xxl-rem;
        }
    }

    .navbars {
        display: none;
        @include respond-to("sm") {
            display: flex;
        }
    }

    .navbars + .navbars {
        @include respond-to("sm") {
            justify-content: center;
            font-size: $fs-md-rem;
            flex: 1 0 100%;
        }
    }

    .seperator {
        display: block;
        margin-block: $space-md;
        margin-inline: $space-md;
        border-bottom: 3px solid get-color("darkShades", 500);
    }

    .nav-container {
        position: fixed;
        inset: 0;
        background-color: get-color("dark", 600);
        transform: translate(100%, 0);
        transition: transform $duration-md ease-in-out;
        z-index: 200;
        overflow: hidden;

        @include respond-to("sm") {
            position: relative;
            display: none;
            transform: unset;
        }

        &.open {
            transform: translate(0, 0);
        }

        .navbar-container {
            display: flex;
            flex-direction: column;
            justify-content: center;
            text-align: right;
            max-width: 66%;
            margin-inline-start: auto;
            height: 100%;
            background-color: get-color("lightShades", 500);

            @include respond-to("sm") {
                // flex-direction: row;
                max-width: 100%;
            }
        }
    }
</style>

<script>
    function setupNavMenu() {
        const navContainer = document.querySelector(".nav-container");
        const navbarContainer = document.querySelector(".navbar-container");
        const openButton = document.querySelector(".menu-toggle.open");
        const closeButton = document.querySelector(".menu-toggle.close");

        openButton?.addEventListener("click", () => {
            navContainer?.classList.add("open");
        });

        closeButton?.addEventListener("click", () => {
            navContainer?.classList.remove("open");
        });

        navContainer?.addEventListener("click", (e) => {
            if (e.target !== navbarContainer) {
                navContainer?.classList.remove("open");
            }
        });
    }

    // Run on initial load
    setupNavMenu();

    // Run after Astro view transitions
    document.addEventListener("astro:after-swap", setupNavMenu);
</script>
