---
const { name, title, backgroundColor } = Astro.props;
---

<details
  name={name}
  class={backgroundColor ? backgroundColor : "backgroundColor"}
>
  <summary>
    <span>{title}</span>
  </summary>
  <slot />
</details>

<style lang="scss" scoped>
  @use "@/styles/abstracts" as *;

  .backgroundColor {
    background-color: get-color("darkShades", 500);
  }

  details {
    $radius: $border-radius;
    position: relative;
    margin-block: em-scale(500);
    border-radius: $radius;

    color: get-color("lightShades");
    border: $border;
    outline: none;
    overflow: hidden;

    &:hover {
      @include shadow(1);
    }

    &:active,
    &:focus {
      @include focus();
      @include shadow(1);
    }

    summary {
      padding: $space-md;
      cursor: pointer;
      border-radius: $border-radius;
      overflow: hidden;

      span {
      }
    }

    &::details-content {
      border: 1px transparent;
      border-bottom-left-radius: $radius;
      border-bottom-right-radius: $radius;
      overflow: hidden;
      block-size: 0;
      transition:
        block-size $duration-md ease,
        content-visibility $duration-md ease;
      transition-behavior: allow-discrete;
      // background: red;
      // @include padding-box("sm");
    }

    &[open]::details-content {
      block-size: auto;
    }

    $time: 0.6s;

    .icon {
      position: relative;
      width: 1rem;
      height: 1rem;
      margin-left: auto;
      text-align: center;
      vertical-align: middle;
      transition: transform $time ease;
    }

    .icon:before {
      color: get-color("lightShades");
      z-index: 1;
      content: "\232a";
      line-height: 1rem;
      font-size: 1rem;
      position: absolute;
      left: 0;
      top: -0.15em;
      right: 0;
      bottom: 0;
    }

    .rotate {
      transform: rotate(90deg);
    }
  }
</style>
