---
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import { Image } from "astro:assets";

import Breadcrumbs from "@/components/Breadcrumbs.astro";
import MainLayout from "@/layouts/MainLayout.astro";
import Paragraph from "@/components/UI/Paragraph.astro";
import Heading from "@/components/Heading/Heading";
import Card from "@/components/UI/Card.astro";

export async function getStaticPaths() {
    const allPosts: CollectionEntry<"guitar">[] = await getCollection("guitar");

    const categorySet = new Set(
        allPosts.map((entry) => entry.slug.split("/")[0]),
    );

    return Array.from(categorySet).map((category) => ({
        params: { category },
    }));
}

const { category } = Astro.params;
const allPosts: CollectionEntry<"guitar">[] = await getCollection("guitar");

const posts = allPosts.filter(
    (post) => post.slug.startsWith(`${category}/`) && post.slug !== category,
);

const categoryIndex = allPosts.find((post) => post.slug === category);

const { Content } = categoryIndex
    ? await categoryIndex.render()
    : { Content: null };

const breadcrumbItems = [
    { label: "guitar", href: "/guitar" },
    {
        label: category,
        href: `/guitar/${category}`,
    },
];
---

<MainLayout>
    <Breadcrumbs items={breadcrumbItems} />
    <Heading level={1}
        >{category.charAt(0).toUpperCase() + category.slice(1)}</Heading
    >

    {Content && <Content />}

    <ul>
        {
            posts.map((post) => (
                <li>
                    <Card href={`/guitar/${post.slug}`}>
                        {post.data.cover && (
                            <Image
                                class="cover"
                                slot="header"
                                src={post.data.cover}
                                alt={post.data.title}
                                layout="full-width"
                            />
                        )}
                        <Fragment slot="content" class="content">
                            <Heading level={2}>{post.data.title}</Heading>
                            <Paragraph size="sm">
                                {post.data.description}
                            </Paragraph>
                        </Fragment>
                    </Card>
                </li>
            ))
        }
    </ul>
</MainLayout>

<style lang="scss">
    @use "@/styles/abstracts" as *;

    .cover {
        width: 100%;
        height: 100%;
        object-fit: cover;
        aspect-ratio: 16 /9;
    }

    h1 {
        margin: $space-md;
        font-weight: bold;
        color: get-color("mainBrand");
    }

    ul {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(px-to-rem(300), 1fr));
        grid-auto-rows: max-content;
        gap: $space-md;
        margin: $space-md;
        list-style-type: none;

        li {
            a {
                text-decoration: none;
                color: inherit;
                font-weight: $fw-lg;
            }
        }
    }
</style>
