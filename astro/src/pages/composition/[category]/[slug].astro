---
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import { Image } from "astro:assets";

import Breadcrumbs from "@/components/Breadcrumbs.astro";
import MusicianLayout from "@/layouts/MusicianLayout.astro";
import Heading from "@/components/Heading/Heading";
import MaxWidthContainer from "@/components/UI/MaxWidthContainer.astro";
import Paragraph from "@/components/UI/Paragraph.astro";

export async function getStaticPaths() {
    const allPosts = await getCollection("composition");

    // Only consider posts whose slug contains a "/" (i.e. has category and a non-index slug part)
    const filteredPosts = allPosts.filter(
        (entry: CollectionEntry<"composition">) => entry.slug.includes("/"),
    );

    return filteredPosts.map((entry: CollectionEntry<"composition">) => {
        const [category, slug] = entry.slug.split("/");

        return {
            params: { category, slug },
            props: { entry },
        };
    });
}

// Get the article from props
interface Props {
    entry: CollectionEntry<"composition">;
}

const { entry } = Astro.props as { entry: CollectionEntry<"composition"> };
const { Content } = await entry.render();

const { category, slug } = Astro.params;

const breadcrumbItems = [
    { label: "composition", href: "/composition" },
    { label: category, href: `/composition/${category}` },
    { label: slug, href: `/composition/${category}/${slug}` },
];
---

<MusicianLayout
    title="Composition"
    description="A collection of composition-related articles and resources."
>
    <Breadcrumbs items={breadcrumbItems} />
    <div class="layout-grid__prefered-width">
        <figure class="">
            {
                entry.data.cover && (
                    <Image
                        class="cover"
                        src={entry.data.cover}
                        alt={entry.data.title}
                        layout="full-width"
                    />
                )
            }
            <figcaption>
                <a href={entry.data.coverCredit}>
                    <em>Image Credit:</em>
                    {entry.data.coverCredit}
                </a>
            </figcaption>
        </figure>

        <header class="">
            <Heading level={1}>{entry.data.title}</Heading>
            <span class="author"><em>by </em>{entry.data.author}</span>
            <span class="published-date"
                ><em>{entry.data.publishedDate.toDateString()}</em></span
            >
        </header>

        <Content />
    </div>
</MusicianLayout>

<style lang="scss">
    @use "@/styles/abstracts" as *;

    figure {
        margin: 0;
        figcaption {
            background: get-color("lightShades", 300);
            a {
                color: inherit;
                @include padding-box("sm");
                display: inline-block;
                word-wrap: break-word; /* For legacy support */
                word-break: break-word; /* Break long words */
                overflow-wrap: anywhere; /* Best modern solution */
                white-space: normal; /* Allow wrapping */
                &:visited {
                    color: inherit;
                }
            }
        }
    }
    .cover {
        // width: 100%;
        // max-height: 50%;
        object-fit: cover;
        object-position: center;
        aspect-ratio: 16 / 9;
    }

    header {
        .author {
            display: block;
            font-weight: $fw-lg;
            em {
                font-weight: $fw-md;
                font-size: $fs-sm-rem;
            }
        }
        .published-date {
            margin-block-start: -$space-sm;
            font-size: $fs-sm-rem;
            color: get-color("darkShades", 500);
        }
    }
</style>
