---
import { getCollection, type CollectionEntry } from "astro:content";
import { Image } from "astro:assets";

import type { CollectionNames } from "@/types/collections";
import { capitalize } from "@/utils/stringHelpers";

import Breadcrumbs from "@/components/Breadcrumbs.astro";
import MainLayout from "@/layouts/MainLayout.astro";
import Paragraph from "@/components/UI/Paragraph.astro";
import Heading from "@/components/Heading/Heading";
import Card from "@/components/UI/Card.astro";

const { collectionName } = Astro.props as { collectionName: CollectionNames };
const { category } = Astro.params as { category: string };

const allArticles = (await getCollection(
    collectionName,
)) as CollectionEntry<CollectionNames>[];

const articles = allArticles.filter(
    (article) =>
        article.slug.startsWith(`${category}/`) && article.slug !== category,
);

const categoryIndex = allArticles.find((article) => article.slug === category);

let Content:
    | ReturnType<
          Awaited<ReturnType<(typeof categoryIndex)["render"]>>
      >["Content"]
    | undefined = undefined;

if (categoryIndex) {
    const rendered = await categoryIndex.render();
    Content = rendered.Content;
}

const breadcrumbItems = [
    { label: collectionName, href: `/${collectionName}` },
    { label: category, href: `/${collectionName}/${category}` },
];

const categoryTitle = capitalize(category ?? "Default Category");
---

<MainLayout title={categoryTitle}>
    <Breadcrumbs items={breadcrumbItems} />
    <Heading level={1}>{categoryTitle}</Heading>

    {Content && <Content />}

    <ul>
        {
            articles.map((article) => (
                <li>
                    <Card href={`/${collectionName}/${article.slug}`}>
                        {article.data.cover && (
                            <Image
                                class="cover"
                                slot="header"
                                src={article.data.cover}
                                alt={article.data.title}
                                layout="full-width"
                            />
                        )}
                        <div slot="content" class="content">
                            <Heading level={2}>{article.data.title}</Heading>
                            <Paragraph size="sm">
                                {article.data.description}
                            </Paragraph>
                        </div>
                    </Card>
                </li>
            ))
        }
    </ul>
</MainLayout>

<style lang="scss">
    @use "@/styles/abstracts" as *;

    .cover {
        width: 100%;
        height: 100%;
        object-fit: cover;
        aspect-ratio: 16 /9;
    }

    h1 {
        margin: $space-md;
        font-weight: bold;
        color: get-color("mainBrand");
    }

    ul {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(px-to-rem(300), 1fr));
        grid-auto-rows: max-content;
        gap: $space-md;
        margin: $space-md;
        list-style-type: none;

        li {
            a {
                text-decoration: none;
                color: inherit;
                font-weight: $fw-lg;
            }
        }
    }
</style>
